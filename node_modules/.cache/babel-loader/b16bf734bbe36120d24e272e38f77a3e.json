{"ast":null,"code":"import _asyncToGenerator from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/paulette./Documents/GitHub/MyStockApp/src/View/Transfer.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport \"../Style/LoginRegister.css\";\nimport profilepicture from '../Icons/profilepicture.png';\nimport { setDoc, doc } from 'firebase/firestore';\nimport { collection, addDoc, getDoc } from 'firebase/firestore';\nimport { auth, storage, db } from \"../Model/firebase\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport swal from 'sweetalert';\nvar Transfer = function Transfer(_ref) {\n  var controller = _ref.controller;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accounts = _useState2[0],\n    setAccounts = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fromAccount = _useState4[0],\n    setFromAccount = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    toAccount = _useState6[0],\n    setToAccount = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    amount = _useState8[0],\n    setAmount = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    accountfund = _useState10[0],\n    setAccountFund = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    balance = _useState12[0],\n    setBalance = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    currency = _useState14[0],\n    setCurrency = _useState14[1];\n  useEffect(function () {\n    // Define an async function inside useEffect to be able to use await\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var docRef, docSnap, arr, accountsArr, key;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              docRef = doc(db, 'users', controller.authUser.uid);\n              _context.next = 3;\n              return getDoc(docRef);\n            case 3:\n              docSnap = _context.sent;\n              arr = docSnap.data()[\"accounts\"];\n              accountsArr = [];\n              for (key in arr) accountsArr.push(arr[key]);\n              accountsArr.unshift('Select Account');\n              console.log(accountsArr);\n              setAccounts(accountsArr);\n              console.log(accounts);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var handleTransferAccount = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return controller.transferAccounts(fromAccount, toAccount, amount);\n          case 2:\n            if (!_context2.sent) {\n              _context2.next = 6;\n              break;\n            }\n            swal(\"Amount Transferred Succesfully\", \"\", \"success\");\n            setAmount(\"\");\n            refreshBalance(toAccount);\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function handleTransferAccount() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  function handleBalance(_x) {\n    return _handleBalance.apply(this, arguments);\n  }\n  function _handleBalance() {\n    _handleBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n      var getAccountInfo;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(e.target.value != 'Select Account')) {\n              _context3.next = 8;\n              break;\n            }\n            setToAccount(e.target.value);\n            console.log(e.target.value);\n            _context3.next = 5;\n            return controller.getBalance(e.target.value);\n          case 5:\n            getAccountInfo = _context3.sent;\n            setCurrency(getAccountInfo[0]);\n            setBalance(getAccountInfo[1]);\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return _handleBalance.apply(this, arguments);\n  }\n  ;\n  function refreshBalance(_x2) {\n    return _refreshBalance.apply(this, arguments);\n  }\n  function _refreshBalance() {\n    _refreshBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(accountID) {\n      var getAccountInfo;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(accountID != 'Select Account')) {\n              _context4.next = 8;\n              break;\n            }\n            setToAccount(accountID);\n            console.log(accountID);\n            _context4.next = 5;\n            return controller.getBalance(accountID);\n          case 5:\n            getAccountInfo = _context4.sent;\n            setCurrency(getAccountInfo[0]);\n            setBalance(getAccountInfo[1]);\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _refreshBalance.apply(this, arguments);\n  }\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AnchorPaneTransfer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TransferFunds\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    classname: \"p\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \" Transfer Funds\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '14px',\n      float: 'left',\n      marginBottom: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"From Account\"), /*#__PURE__*/React.createElement(\"select\", {\n    placeholder: \"From Account\",\n    className: \"AccountSelector\",\n    value: fromAccount,\n    onChange: function onChange(e) {\n      return setFromAccount(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, accounts.map(function (val, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 55\n      }\n    }, val);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '14px',\n      float: 'left',\n      marginBottom: '5px',\n      marginTop: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"To Account\"), /*#__PURE__*/React.createElement(\"select\", {\n    placeholder: \"To Account\",\n    className: \"AccountSelector\",\n    value: toAccount,\n    onChange: handleBalance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, accounts.map(function (val, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 55\n      }\n    }, val);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AmountBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '14px',\n      float: 'left',\n      marginBottom: '0px',\n      marginRight: '5px',\n      width: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Amount \", currency), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: '14px',\n      float: 'left',\n      marginRight: '5px'\n    },\n    placeholder: \"0.00\",\n    type: \"number\",\n    pattern: \"/^[0-9\\\\b]+$/\",\n    value: amount,\n    onChange: function onChange(e) {\n      return setAmount(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: '14px',\n      float: 'left',\n      marginLeft: '5px'\n    },\n    type: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '15px',\n      float: 'left',\n      marginBottom: '5px',\n      marginLeft: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Balance \", currency, \" \", balance)), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"ButtonHome\",\n    onClick: function onClick() {\n      return handleTransferAccount();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Transfer Funds\")));\n};\nexport default Transfer;","map":{"version":3,"names":["profilepicture","setDoc","doc","collection","addDoc","getDoc","auth","storage","db","React","useState","useEffect","useMemo","swal","Transfer","controller","accounts","setAccounts","fromAccount","setFromAccount","toAccount","setToAccount","amount","setAmount","accountfund","setAccountFund","balance","setBalance","currency","setCurrency","fetchData","docRef","authUser","uid","docSnap","arr","data","accountsArr","key","push","unshift","console","log","handleTransferAccount","transferAccounts","refreshBalance","handleBalance","e","target","value","getBalance","getAccountInfo","accountID","fontSize","float","marginBottom","map","val","i","marginTop","marginRight","width","marginLeft"],"sources":["/Users/paulette./Documents/GitHub/MyStockApp/src/View/Transfer.js"],"sourcesContent":["import \"../Style/LoginRegister.css\";\nimport profilepicture from '../Icons/profilepicture.png';\nimport { setDoc, doc } from 'firebase/firestore';\nimport { collection, addDoc, getDoc } from 'firebase/firestore';\nimport {auth, storage, db} from \"../Model/firebase\"; \nimport React, { useState, useEffect, useMemo } from \"react\";\nimport swal from 'sweetalert';\n\n\n\n\nconst Transfer = ({controller}) => {\n\n    const [accounts, setAccounts] = useState([]);\n    const [fromAccount, setFromAccount] = useState(\"\");\n    const [toAccount, setToAccount] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [accountfund, setAccountFund] = useState(\"\");\n    const [balance, setBalance] = useState([]);\n    const [currency, setCurrency] = useState([]);\n\n    \n    useEffect(() => {\n        // Define an async function inside useEffect to be able to use await\n        const fetchData = async () => {\n\n            const docRef = doc(db, 'users', controller.authUser.uid);\n            const docSnap = await getDoc(docRef);\n            const arr = docSnap.data()[\"accounts\"];\n            let accountsArr = [];\n            for (var key in arr)\n                accountsArr.push(arr[key]);\n            accountsArr.unshift('Select Account');\n            console.log( accountsArr );\n            setAccounts(accountsArr);\n            console.log( accounts );\n            \n            };\n            fetchData();\n    }, []);\n\n    const handleTransferAccount = async () => {\n\n        if(await controller.transferAccounts(fromAccount, toAccount, amount)){\n            swal(\"Amount Transferred Succesfully\",\"\",\"success\");   \n            setAmount(\"\");\n            refreshBalance(toAccount);\n        }\n        \n    };\n\n    async function handleBalance (e){\n\n        if (e.target.value != 'Select Account'){\n            setToAccount(e.target.value);\n            console.log(e.target.value);\n            const getAccountInfo = await controller.getBalance(e.target.value);\n            \n            setCurrency(getAccountInfo[0])\n            setBalance(getAccountInfo[1])\n        }\n    };\n\n    async function refreshBalance (accountID){\n\n        if (accountID != 'Select Account'){\n            setToAccount(accountID)\n            console.log(accountID);\n            const getAccountInfo = await controller.getBalance(accountID);\n            \n            setCurrency(getAccountInfo[0])\n            setBalance(getAccountInfo[1])\n        }\n    };\n\n\n\n    return(\n        <div className=\"AnchorPaneTransfer\">\n                <div className=\"TransferFunds\">\n                    <h1 classname=\"p\"> Transfer Funds</h1>\n                        <div style={{fontSize: '14px', float: 'left', marginBottom: '5px'}}>From Account</div>\n                        <select placeholder=\"From Account\" className=\"AccountSelector\" value={fromAccount} onChange={(e)=>setFromAccount(e.target.value)} >\n                            {accounts.map((val, i) => <option key={i} value={val}>{val}</option>)}\n                        </select>\n                        <div style={{fontSize: '14px', float: 'left', marginBottom: '5px', marginTop: '20px'}}>To Account</div>\n                        <select placeholder=\"To Account\" className=\"AccountSelector\" value={toAccount} onChange={handleBalance}>\n                            {accounts.map((val, i) => <option key={i} value={val}>{val}</option>)}\n                        </select>\n\n                        <div className=\"AmountBox\">\n                            <div style={{fontSize: '14px', float: 'left', marginBottom: '0px', marginRight: '5px', width: '20%'}} >Amount {currency}</div>\n                            <input style={{fontSize: '14px', float: 'left' , marginRight: '5px'}} placeholder=\"0.00\" type=\"number\" pattern=\"/^[0-9\\b]+$/\" value={amount} onChange={(e)=>setAmount(e.target.value)}></input>\n                            <input style={{fontSize: '14px', float: 'left' , marginLeft: '5px'}} type=\"date\"></input>\n                            \n                            <div style={{fontSize: '15px', float: 'left', marginBottom: '5px', marginLeft: '5px'}}>Balance {currency} {balance}</div>\n\n                        </div>\n                        \n                        <button id=\"ButtonHome\" onClick={()=>handleTransferAccount()}>Transfer Funds</button>\n                </div>\n        </div>\n    )\n}\nexport default Transfer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}