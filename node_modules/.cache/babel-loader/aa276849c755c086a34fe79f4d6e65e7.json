{"ast":null,"code":"import _defineProperty from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Icon } from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  var _options$viewBox = options.viewBox,\n    viewBox = _options$viewBox === void 0 ? \"0 0 24 24\" : _options$viewBox,\n    pathDefinition = options.d,\n    displayName = options.displayName,\n    _options$defaultProps = options.defaultProps,\n    defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps;\n  var path = Children.toArray(options.path);\n  var Comp = forwardRef(function (props, ref) {\n    return /* @__PURE__ */jsx(Icon, _objectSpread(_objectSpread(_objectSpread({\n      ref: ref,\n      viewBox: viewBox\n    }, defaultProps), props), {}, {\n      children: path.length ? path : /* @__PURE__ */jsx(\"path\", {\n        fill: \"currentColor\",\n        d: pathDefinition\n      })\n    }));\n  });\n  Comp.displayName = displayName;\n  return Comp;\n}\nexport { createIcon };","map":null,"metadata":{},"sourceType":"module"}