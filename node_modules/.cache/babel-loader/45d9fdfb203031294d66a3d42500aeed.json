{"ast":null,"code":"import _defineProperty from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\nvar shouldInheritGroup = function shouldInheritGroup(inherit) {\n  return inherit === true;\n};\nvar shouldInheritId = function shouldInheritId(inherit) {\n  return shouldInheritGroup(inherit === true) || inherit === \"id\";\n};\nvar LayoutGroup = function LayoutGroup(_ref) {\n  var children = _ref.children,\n    id = _ref.id,\n    inheritId = _ref.inheritId,\n    _ref$inherit = _ref.inherit,\n    inherit = _ref$inherit === void 0 ? true : _ref$inherit;\n  // Maintain backwards-compatibility with inheritId until 7.0\n  if (inheritId !== undefined) inherit = inheritId;\n  var layoutGroupContext = useContext(LayoutGroupContext);\n  var deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceRender = _useForceUpdate2[0],\n    key = _useForceUpdate2[1];\n  var context = useRef(null);\n  var upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n  if (context.current === null) {\n    if (shouldInheritId(inherit) && upstreamId) {\n      id = id ? upstreamId + \"-\" + id : upstreamId;\n    }\n    context.current = {\n      id: id,\n      group: shouldInheritGroup(inherit) ? layoutGroupContext.group || nodeGroup() : nodeGroup()\n    };\n  }\n  var memoizedContext = useMemo(function () {\n    return _objectSpread(_objectSpread({}, context.current), {}, {\n      forceRender: forceRender\n    });\n  }, [key]);\n  return React.createElement(LayoutGroupContext.Provider, {\n    value: memoizedContext\n  }, children);\n};\nexport { LayoutGroup };","map":null,"metadata":{},"sourceType":"module"}