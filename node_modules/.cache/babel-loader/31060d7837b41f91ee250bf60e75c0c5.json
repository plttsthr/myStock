{"ast":null,"code":"import _defineProperty from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { clamp } from '../../../utils/clamp.mjs';\nvar number = {\n  test: function test(v) {\n    return typeof v === \"number\";\n  },\n  parse: parseFloat,\n  transform: function transform(v) {\n    return v;\n  }\n};\nvar alpha = _objectSpread(_objectSpread({}, number), {}, {\n  transform: function transform(v) {\n    return clamp(0, 1, v);\n  }\n});\nvar scale = _objectSpread(_objectSpread({}, number), {}, {\n  default: 1\n});\nexport { alpha, number, scale };","map":null,"metadata":{},"sourceType":"module"}