{"ast":null,"code":"import _classCallCheck from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nvar DragGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(DragGesture, _Feature);\n  var _super = _createSuper(DragGesture);\n  function DragGesture(node) {\n    var _this;\n    _classCallCheck(this, DragGesture);\n    _this = _super.call(this, node);\n    _this.removeGroupControls = noop;\n    _this.removeListeners = noop;\n    _this.controls = new VisualElementDragControls(node);\n    return _this;\n  }\n  _createClass(DragGesture, [{\n    key: \"mount\",\n    value: function mount() {\n      // If we've been provided a DragControls for manual control over the drag gesture,\n      // subscribe this component to it on mount.\n      var _this$node$getProps = this.node.getProps(),\n        dragControls = _this$node$getProps.dragControls;\n      if (dragControls) {\n        this.removeGroupControls = dragControls.subscribe(this.controls);\n      }\n      this.removeListeners = this.controls.addListeners() || noop;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.removeGroupControls();\n      this.removeListeners();\n    }\n  }]);\n  return DragGesture;\n}(Feature);\nexport { DragGesture };","map":null,"metadata":{},"sourceType":"module"}