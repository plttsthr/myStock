{"ast":null,"code":"import _objectWithoutProperties from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"children\", \"isDisabled\", \"__css\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// src/close-button.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction CloseIcon(props) {\n  return /* @__PURE__ */jsx(Icon, _objectSpread(_objectSpread({\n    focusable: \"false\",\n    \"aria-hidden\": true\n  }, props), {}, {\n    children: /* @__PURE__ */jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n    })\n  }));\n}\nvar CloseButton = forwardRef(function CloseButton2(props, ref) {\n  var styles = useStyleConfig(\"CloseButton\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    children = _omitThemingProps.children,\n    isDisabled = _omitThemingProps.isDisabled,\n    __css = _omitThemingProps.__css,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var baseStyle = {\n    outline: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: 0\n  };\n  return /* @__PURE__ */jsx(chakra.button, _objectSpread(_objectSpread({\n    type: \"button\",\n    \"aria-label\": \"Close\",\n    ref: ref,\n    disabled: isDisabled,\n    __css: _objectSpread(_objectSpread(_objectSpread({}, baseStyle), styles), __css)\n  }, rest), {}, {\n    children: children || /* @__PURE__ */jsx(CloseIcon, {\n      width: \"1em\",\n      height: \"1em\"\n    })\n  }));\n});\nCloseButton.displayName = \"CloseButton\";\nexport { CloseButton };","map":null,"metadata":{},"sourceType":"module"}