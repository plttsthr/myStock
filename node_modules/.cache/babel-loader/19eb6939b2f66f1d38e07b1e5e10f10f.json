{"ast":null,"code":"import _asyncToGenerator from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/paulette./Documents/GitHub/MyStockApp/src/View/PhoneVerify.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState } from \"react\";\nimport { InputMask } from 'primereact/inputmask';\nimport { InputText } from 'primereact/inputtext';\nimport \"../Style/LoginRegister.css\";\nimport { RecaptchaVerifier, signInWithPhoneNumber, signInWithCredential, PhoneAuthProvider } from 'firebase/auth';\nimport { auth } from \"../Model/firebase\";\nimport { onSignInSubmit } from \"firebase/auth\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\nimport PhoneInput, { formatPhoneNumber, formatPhoneNumberIntl } from 'react-phone-number-input';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nvar PhoneVerify = function PhoneVerify(_ref) {\n  var controller = _ref.controller,\n    setPVerif = _ref.setPVerif,\n    setPNumber = _ref.setPNumber,\n    setCoCode = _ref.setCoCode;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    verificationCode = _useState2[0],\n    setVerificationCode = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phoneNumber = _useState4[0],\n    setPhoneNumber = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    country = _useState6[0],\n    setCountry = _useState6[1];\n  var sendVerifCode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(userIDStr, phoneNumberStr) {\n      var data, url;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              uidStr: userIDStr,\n              phoneStr: phoneNumberStr\n            };\n            url = \"https://us-central1-mystockapp-23c4a.cloudfunctions.net/sendOTP\";\n            axios.post(url, data).then(function (response) {\n              console.log(response.data);\n              // do something with response data\n            }).catch(function (error) {\n              console.log(error);\n              // handle error\n            });\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function sendVerifCode(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var VerifCode = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(userIDStr, codeString) {\n      var data, url;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              uidStr: userIDStr,\n              codeStr: codeString\n            };\n            url = \"https://us-central1-mystockapp-23c4a.cloudfunctions.net/verifyOTP\";\n            axios.post(url, data).then(function (response) {\n              console.log(response.data.result);\n              return response.data.result;\n              // do something with response data\n            }).catch(function (error) {\n              console.log(error);\n              // handle error\n            });\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function VerifCode(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var cancelButtonAction = function cancelButtonAction() {\n    setCoCode(\"\");\n    setPNumber(\"\");\n  };\n  var verifyCodeButtonAction = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"check if code input is valid\");\n            setPNumber(phoneNumber);\n            if (VerifCode(controller.authUser.uid, verificationCode)) {\n              console.log(\"True for pass page\");\n              setPVerif(true);\n              swal(\"Phone Verified Succesfully\", \"\", \"success\");\n            }\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function verifyCodeButtonAction() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var sendVerifCodeButtonAction = function sendVerifCodeButtonAction() {\n    // Check if phone and extension is valid before sending\n    if (sendVerifCode(controller.authUser.uid, phoneNumber)) {\n      swal(\"Verification Code Sent\", \"\", \"success\");\n      console.log(\"ask controller to send code\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"PhoneVerify\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Verify Your Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PhoneNumber\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    placeholder: \"Phone number\",\n    countrySelectProps: {\n      unicodeFlags: true\n    },\n    id: \"CountryCode\",\n    class: \"form-control\",\n    required: true,\n    value: phoneNumber,\n    onChange: setPhoneNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Verification Code\",\n    id: \"verification\",\n    value: verificationCode,\n    onChange: function onChange(e) {\n      return setVerificationCode(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"uli\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: sendVerifCodeButtonAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \" Send Code \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: cancelButtonAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \" Cancel \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: verifyCodeButtonAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \" Verify Code \"))));\n};\nexport default PhoneVerify;","map":{"version":3,"names":["React","useState","InputMask","InputText","RecaptchaVerifier","signInWithPhoneNumber","signInWithCredential","PhoneAuthProvider","auth","onSignInSubmit","motion","PhoneInput","formatPhoneNumber","formatPhoneNumberIntl","axios","swal","PhoneVerify","controller","setPVerif","setPNumber","setCoCode","verificationCode","setVerificationCode","phoneNumber","setPhoneNumber","country","setCountry","sendVerifCode","userIDStr","phoneNumberStr","data","uidStr","phoneStr","url","post","then","response","console","log","catch","error","VerifCode","codeString","codeStr","result","cancelButtonAction","verifyCodeButtonAction","authUser","uid","sendVerifCodeButtonAction","unicodeFlags","e","target","value"],"sources":["/Users/paulette./Documents/GitHub/MyStockApp/src/View/PhoneVerify.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { InputMask } from 'primereact/inputmask';\nimport { InputText} from 'primereact/inputtext';\nimport \"../Style/LoginRegister.css\";\nimport {RecaptchaVerifier, signInWithPhoneNumber, signInWithCredential, PhoneAuthProvider} from 'firebase/auth';\nimport {auth} from \"../Model/firebase\";\nimport {onSignInSubmit} from \"firebase/auth\";\nimport {motion} from \"framer-motion/dist/framer-motion\";\nimport PhoneInput, { formatPhoneNumber, formatPhoneNumberIntl } from 'react-phone-number-input';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst PhoneVerify = ({controller, setPVerif, setPNumber, setCoCode}) => {\n    const [ verificationCode, setVerificationCode] = useState(\"\");\n    const [ phoneNumber, setPhoneNumber] = useState(\"\");\n    const [ country, setCountry] = useState(\"\"); \n\n    const sendVerifCode = async ( userIDStr, phoneNumberStr) => {\n        let data = {\n            uidStr: userIDStr, \n            phoneStr : phoneNumberStr\n          };\n        let url = \"https://us-central1-mystockapp-23c4a.cloudfunctions.net/sendOTP\";\n        axios.post(url,data)\n        .then(response => {\n            console.log(response.data);\n            // do something with response data\n        })\n        .catch(error => {\n            console.log(error);\n            // handle error\n        });\n      }\n\n    const VerifCode = async ( userIDStr, codeString) => {\n    let data = {\n        uidStr: userIDStr, \n        codeStr : codeString\n        };\n    let url = \"https://us-central1-mystockapp-23c4a.cloudfunctions.net/verifyOTP\";\n    axios.post(url,data)\n    .then(response => {\n        console.log(response.data.result);\n        return response.data.result;\n        // do something with response data\n    })\n    .catch(error => {\n        console.log(error);\n        // handle error\n    });\n    }\n\n\n    const cancelButtonAction = () => {\n        setCoCode(\"\");\n        setPNumber(\"\");\n    }\n\n    const verifyCodeButtonAction = async () => {\n        console.log(\"check if code input is valid\");\n        setPNumber(phoneNumber);\n    \n        if ( VerifCode(controller.authUser.uid, verificationCode)) {\n            console.log(\"True for pass page\");\n            setPVerif(true);\n            swal(\"Phone Verified Succesfully\",\"\",\"success\");\n        }\n        \n    };\n    \n    \n    const sendVerifCodeButtonAction = () => {\n        // Check if phone and extension is valid before sending\n        if(sendVerifCode(controller.authUser.uid, phoneNumber)){\n            swal(\"Verification Code Sent\",\"\",\"success\");\n            console.log(\"ask controller to send code\");\n        }\n        \n        \n    }\n    \n\n    return (\n        <form className=\"PhoneVerify\">\n            <h1>Verify Your Phone Number</h1>\n                <div className=\"PhoneNumber\">\n                        <PhoneInput  placeholder=\"Phone number\" countrySelectProps={{ unicodeFlags: true }}  id=\"CountryCode\" class=\"form-control\" required value={phoneNumber} onChange={setPhoneNumber} ></PhoneInput>  \n                        <input placeholder=\"Verification Code\" id=\"verification\" value= {verificationCode} onChange={(e)=>setVerificationCode(e.target.value)} ></input> \n                </div>              \n                    <ul>\n                        <uli>\n                        \n                            <button type=\"button\" onClick={sendVerifCodeButtonAction}> Send Code </button>\n                            <button type=\"button\" onClick={cancelButtonAction}> Cancel </button>\n                            <button type=\"button\" onClick={verifyCodeButtonAction}> Verify Code </button>\n                            \n                        </uli>\n                    </ul>  \n        </form>\n\n    )\n}\n\nexport default PhoneVerify;"],"mappings":"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"},"metadata":{},"sourceType":"module"}