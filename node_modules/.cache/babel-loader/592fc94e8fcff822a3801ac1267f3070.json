{"ast":null,"code":"import _toConsumableArray from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _this = this,\n  _jsxFileName = \"/Users/paulette./Documents/GitHub/MyStockApp/src/View/SellStocks.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport \"../Style/LoginRegister.css\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { setDoc, doc } from 'firebase/firestore';\nimport { collection, addDoc, getDoc } from 'firebase/firestore';\nimport { auth, storage, db } from \"../Model/firebase\";\nvar Stocks = function Stocks(_ref) {\n  var controller = _ref.controller,\n    props = _objectWithoutProperties(_ref, [\"controller\"]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accounts = _useState2[0],\n    setAccounts = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    accountSelection = _useState4[0],\n    setAccountSelection = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    balance = _useState6[0],\n    setBalance = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currency = _useState8[0],\n    setCurrency = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isDisabled = _useState10[0],\n    setDisabled = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    stocks = _useState12[0],\n    setQuantity = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    stockImgs = _useState14[0],\n    setImgs = _useState14[1];\n  useEffect(function () {\n    // Define an async function inside useEffect to be able to use await\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var uid, docRef, docSnap, arr, accountsArr, key;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return controller.checkCurrentUserStatus();\n            case 2:\n              uid = _context.sent;\n              docRef = doc(db, 'users', controller.authUser.uid);\n              _context.next = 6;\n              return getDoc(docRef);\n            case 6:\n              docSnap = _context.sent;\n              arr = docSnap.data()[\"accounts\"];\n              accountsArr = [];\n              for (key in arr) accountsArr.push(arr[key]);\n              accountsArr.unshift('Select Account To Buy');\n              console.log(accountsArr);\n              setAccounts(accountsArr);\n              console.log(accounts);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  useEffect(function () {\n    // Define an async function inside useEffect to be able to use await\n    var fetchStocks = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var StocksFetch, stockURL, stock;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return controller.getStocksInfo();\n            case 2:\n              StocksFetch = _context2.sent;\n              setQuantity(StocksFetch);\n              console.log(\"here\");\n              stockURL = [];\n              _context2.t0 = _regeneratorRuntime().keys(StocksFetch);\n            case 7:\n              if ((_context2.t1 = _context2.t0()).done) {\n                _context2.next = 14;\n                break;\n              }\n              stock = _context2.t1.value;\n              _context2.next = 11;\n              return controller.getImage(\"stocks/logos/\".concat(StocksFetch[stock].stockimg, \".png\"));\n            case 11:\n              stockURL[stock] = _context2.sent;\n              _context2.next = 7;\n              break;\n            case 14:\n              console.log(stockURL);\n              setImgs(stockURL);\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function fetchStocks() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchStocks();\n  }, []);\n  var handleChange = function handleChange(e, index) {\n    var newFiltered = _toConsumableArray(filtered);\n    newFiltered[index][e.target.name] = e.target.value;\n    setQuantity(stocks.map(function (stock) {\n      return stock.id === newFiltered[index].id ? newFiltered[index] : stock;\n    }));\n  };\n  var filtered = stocks.filter(function (stock) {\n    return stock.id.includes(props.searchText) || stock.symbol.includes(props.searchText);\n  });\n  function handleAccountSelection(_x) {\n    return _handleAccountSelection.apply(this, arguments);\n  }\n  function _handleAccountSelection() {\n    _handleAccountSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (e.target.value != 'Select Account') {\n              setAccountSelection(e.target.value);\n              setDisabled(false);\n            }\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return _handleAccountSelection.apply(this, arguments);\n  }\n  function sellStockAction(_x2, _x3) {\n    return _sellStockAction.apply(this, arguments);\n  }\n  function _sellStockAction() {\n    _sellStockAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(stockName, stockQuantity) {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(accountSelection, stockName, stockQuantity);\n            _context4.next = 3;\n            return controller.sellStock(accountSelection, stockName, stockQuantity);\n          case 3:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _sellStockAction.apply(this, arguments);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Stocks\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Accounts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    placeholder: \"Select Account\",\n    className: \"AccountSelector\",\n    value: accountSelection,\n    onChange: handleAccountSelection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, accounts.map(function (val, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: val,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 55\n      }\n    }, val);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MyStocks\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"StocksGrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, filtered.map(function (stock, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: stock.id,\n      className: \"StockCard\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, stock.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"StockImg\",\n      src: stockImgs[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \" $ \", stock.price), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AmountStock\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, \"Quantity:\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"0\",\n      pattern: \"/^[1-9\\\\b]+$/\",\n      value: stock.quantity,\n      onChange: function onChange(e) {\n        return handleChange(e, i);\n      },\n      name: \"quantity\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AmountStock\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, \" Total Price: $ \", (stock.price * stock.quantity).toFixed(2))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        sellStockAction(stock.name, stock.quantity);\n      },\n      disabled: isDisabled,\n      Style: {\n        color: isDisabled ? 'red' : 'green'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, \"Buy\"));\n  }))));\n};\nexport default Stocks;","map":{"version":3,"names":["React","useState","useEffect","useMemo","setDoc","doc","collection","addDoc","getDoc","auth","storage","db","Stocks","controller","props","accounts","setAccounts","accountSelection","setAccountSelection","balance","setBalance","currency","setCurrency","isDisabled","setDisabled","stocks","setQuantity","stockImgs","setImgs","fetchData","checkCurrentUserStatus","uid","docRef","authUser","docSnap","arr","data","accountsArr","key","push","unshift","console","log","fetchStocks","getStocksInfo","StocksFetch","stockURL","stock","getImage","stockimg","handleChange","e","index","newFiltered","filtered","target","name","value","map","id","filter","includes","searchText","symbol","handleAccountSelection","sellStockAction","stockName","stockQuantity","sellStock","val","i","price","quantity","toFixed","color"],"sources":["/Users/paulette./Documents/GitHub/MyStockApp/src/View/SellStocks.js"],"sourcesContent":["import \"../Style/LoginRegister.css\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { setDoc, doc } from 'firebase/firestore';\nimport { collection, addDoc, getDoc } from 'firebase/firestore';\nimport {auth, storage, db} from \"../Model/firebase\"; \n\nconst Stocks =  ({ controller, ...props }) => {\n\n    const [accounts, setAccounts] = useState([]);\n    const [accountSelection, setAccountSelection] = useState(\"\");\n    const [balance, setBalance] = useState([]);\n    const [currency, setCurrency] = useState([]);\n    const [isDisabled, setDisabled] = useState(true);\n\n    const [stocks, setQuantity] =  useState([])\n    const [stockImgs, setImgs] =  useState([])\n\n    useEffect(() => {\n        // Define an async function inside useEffect to be able to use await\n        const fetchData = async () => {\n                \n            const uid = await controller.checkCurrentUserStatus();\n\n            const docRef = doc(db, 'users', controller.authUser.uid);\n            const docSnap = await getDoc(docRef);\n            const arr = docSnap.data()[\"accounts\"];\n            let accountsArr = [];\n            for (var key in arr)\n                accountsArr.push(arr[key]);\n            accountsArr.unshift('Select Account To Buy');\n            console.log( accountsArr );\n            setAccounts(accountsArr);\n            console.log( accounts );\n            \n            };\n        fetchData();\n    }, []);\n\n\n    useEffect(() => {\n      // Define an async function inside useEffect to be able to use await\n      const fetchStocks = async () => {\n              \n          const StocksFetch = await controller.getStocksInfo();\n          setQuantity(StocksFetch);\n          console.log(\"here\");\n          let stockURL=[];\n          for(var stock in StocksFetch)\n            stockURL[stock] = await controller.getImage( `stocks/logos/${StocksFetch[stock].stockimg}.png`);\n          console.log(stockURL);\n          setImgs(stockURL);\n          };\n          \n\n      fetchStocks();\n  }, []);\n\n    const handleChange = (e, index) => {\n        const newFiltered = [...filtered];\n        newFiltered[index][e.target.name] = e.target.value;\n        setQuantity(\n          stocks.map((stock) => (stock.id === newFiltered[index].id ? newFiltered[index] : stock))\n        );\n      };\n\n    const filtered = stocks.filter((stock) =>\n    stock.id.includes(props.searchText) ||\n    stock.symbol.includes(props.searchText)\n  );\n\n    async function handleAccountSelection(e) {\n\n      if (e.target.value != 'Select Account'){\n        setAccountSelection(e.target.value)\n        setDisabled(false);\n      }\n    }\n\n    async function sellStockAction( stockName, stockQuantity ){\n      console.log(accountSelection, stockName, stockQuantity);\n      return await controller.sellStock(accountSelection, stockName, stockQuantity );\n    }\n       \n\n    return(\n\n        <div className=\"Stocks\">\n            <div className=\"Accounts\" >\n                            \n                            <select placeholder=\"Select Account\" className=\"AccountSelector\" value={accountSelection} onChange={handleAccountSelection} >\n                            {accounts.map((val, i) => <option key={i} value={val}>{val}</option>)}\n                            </select>\n                            \n            </div>\n            <div className=\"MyStocks\">\n                <div className=\"StocksGrid\" >\n                    {filtered.map((stock,i) => (\n\n                        <div key={stock.id} className=\"StockCard\">\n                                <h4>{stock.name}</h4>\n                                <img className=\"StockImg\" src={stockImgs[i]}></img>\n                                <h4> $ {stock.price}</h4>\n                                \n                                    <div className=\"AmountStock\">\n                                            <h4>Quantity:</h4>\n                                            <input placeholder=\"0\"  pattern=\"/^[1-9\\b]+$/\" value={stock.quantity} onChange={(e) => handleChange(e, i)} name=\"quantity\"></input> \n                                    </div>\n\n                                    <div className=\"AmountStock\">\n                                            \n                                        <h4> Total Price: $ {(stock.price * stock.quantity).toFixed(2)}</h4>\n                                    </div>\n\n                                    <button type=\"button\"  onClick={ () => {sellStockAction( stock.name, stock.quantity);} }  disabled={isDisabled} Style={{ color: isDisabled ? 'red' : 'green' }}>Buy</button>   \n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Stocks;"],"mappings":"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"},"metadata":{},"sourceType":"module"}