{"ast":null,"code":"import _objectWithoutProperties from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/paulette./Documents/GitHub/MyStockApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\", \"motionProps\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { TRANSITION_EASINGS, getSlideTransition, withDelay } from \"./chunk-LB6CWFOC.mjs\";\n\n// src/slide.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: function exit(_ref) {\n    var direction = _ref.direction,\n      transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      delay = _ref.delay;\n    var _a;\n    var _getSlideTransition = getSlideTransition({\n        direction: direction\n      }),\n      exitStyles = _getSlideTransition.exit;\n    return _objectSpread(_objectSpread({}, exitStyles), {}, {\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: function enter(_ref2) {\n    var direction = _ref2.direction,\n      transitionEnd = _ref2.transitionEnd,\n      transition = _ref2.transition,\n      delay = _ref2.delay;\n    var _a;\n    var _getSlideTransition2 = getSlideTransition({\n        direction: direction\n      }),\n      enterStyles = _getSlideTransition2.enter;\n    return _objectSpread(_objectSpread({}, enterStyles), {}, {\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  var _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"right\" : _props$direction,\n    style = props.style,\n    unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var transitionStyles = getSlideTransition({\n    direction: direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd: transitionEnd,\n    transition: transition,\n    direction: direction,\n    delay: delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom: custom,\n    children: show && /* @__PURE__ */jsx(motion.div, _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate: animate,\n      exit: \"exit\",\n      custom: custom,\n      variants: variants,\n      style: computedStyle\n    }, motionProps))\n  });\n});\nSlide.displayName = \"Slide\";\nexport { Slide };","map":null,"metadata":{},"sourceType":"module"}